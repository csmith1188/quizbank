{
    "id": 1,
    "name": "Computer Programming",
    "sections": [
        {
            "id": 3,
            "name": "NodeJS",
            "description": "An introduction to fundamental coding concepts of programming in NodeJS.",
            "units": [
                {
                    "id": 1,
                    "name": "NodeJS, Express, EJS",
                    "description": "An overview of using NodeJS with Express and EJS for web development.",
                    "tasks": [
                        {
                            "id": 1,
                            "name": "HTTP Server",
                            "description": "Creating a simple HTTP server using Node.js.",
                            "genprompt": "Generate multiple-choice questions. Each question has four answers. Write them in the question object format. The content of the question is about creating a simple HTTP server using Node.js. Focus on server creation, request handling, and response management.",
                            "questions": [
                                {
                                    "id": 1,
                                    "prompt": "What is the primary purpose of Express.js in a Node.js application?",
                                    "correctAnswer": "To provide a web application framework for handling HTTP requests and responses",
                                    "correctIndex": 2,
                                    "answers": [
                                        "To compile JavaScript code",
                                        "To manage database connections only",
                                        "To provide a web application framework for handling HTTP requests and responses",
                                        "To render client-side JavaScript"
                                    ]
                                },
                                {
                                    "id": 2,
                                    "prompt": "Which command is used to initialize a new Node.js project?",
                                    "correctAnswer": "npm init",
                                    "correctIndex": 0,
                                    "answers": [
                                        "npm init",
                                        "node start",
                                        "express new",
                                        "node create"
                                    ]
                                },
                                {
                                    "id": 3,
                                    "prompt": "What is the file extension for EJS templates?",
                                    "correctAnswer": ".ejs",
                                    "correctIndex": 1,
                                    "answers": [
                                        ".js",
                                        ".ejs",
                                        ".html",
                                        ".view"
                                    ]
                                },
                                {
                                    "id": 4,
                                    "prompt": "How do you include Express.js in your Node.js application?",
                                    "correctAnswer": "const express = require('express');",
                                    "correctIndex": 3,
                                    "answers": [
                                        "import express from 'express'",
                                        "include 'express'",
                                        "use express",
                                        "const express = require('express');"
                                    ]
                                },
                                {
                                    "id": 5,
                                    "prompt": "What is the purpose of the views directory in an Express.js application?",
                                    "correctAnswer": "To store template files",
                                    "correctIndex": 2,
                                    "answers": [
                                        "To store static files",
                                        "To store route handlers",
                                        "To store template files",
                                        "To store configuration files"
                                    ]
                                },
                                {
                                    "id": 6,
                                    "prompt": "Which EJS syntax is used to output escaped HTML content?",
                                    "correctAnswer": "<%= %>",
                                    "correctIndex": 1,
                                    "answers": [
                                        "<%- %>",
                                        "<%= %>",
                                        "<% %>",
                                        "{{  }}"
                                    ]
                                },
                                {
                                    "id": 7,
                                    "prompt": "How do you set EJS as the view engine in Express.js?",
                                    "correctAnswer": "app.set('view engine', 'ejs');",
                                    "correctIndex": 0,
                                    "answers": [
                                        "app.set('view engine', 'ejs');",
                                        "app.engine('ejs');",
                                        "app.use('ejs');",
                                        "app.view('ejs');"
                                    ]
                                },
                                {
                                    "id": 8,
                                    "prompt": "Which middleware is commonly used to parse POST request bodies in Express.js?",
                                    "correctAnswer": "express.urlencoded()",
                                    "correctIndex": 3,
                                    "answers": [
                                        "express.parser()",
                                        "express.json()",
                                        "express.body()",
                                        "express.urlencoded()"
                                    ]
                                },
                                {
                                    "id": 9,
                                    "prompt": "What is the correct way to serve static files in Express.js?",
                                    "correctAnswer": "app.use(express.static('public'));",
                                    "correctIndex": 2,
                                    "answers": [
                                        "app.static('public');",
                                        "app.serve('public');",
                                        "app.use(express.static('public'));",
                                        "app.public('static');"
                                    ]
                                },
                                {
                                    "id": 10,
                                    "prompt": "How do you pass data to an EJS template?",
                                    "correctAnswer": "res.render('template', { data: value });",
                                    "correctIndex": 1,
                                    "answers": [
                                        "res.send('template', { data: value });",
                                        "res.render('template', { data: value });",
                                        "res.template('template', { data: value });",
                                        "res.view('template', { data: value });"
                                    ]
                                },
                                {
                                    "id": 11,
                                    "prompt": "What is the purpose of the package.json file?",
                                    "correctAnswer": "To manage project dependencies and scripts",
                                    "correctIndex": 0,
                                    "answers": [
                                        "To manage project dependencies and scripts",
                                        "To store application data",
                                        "To configure the server",
                                        "To define database schemas"
                                    ]
                                },
                                {
                                    "id": 12,
                                    "prompt": "Which port is commonly used for development in Node.js applications?",
                                    "correctAnswer": "3000",
                                    "correctIndex": 3,
                                    "answers": [
                                        "8080",
                                        "5000",
                                        "4000",
                                        "3000"
                                    ]
                                },
                                {
                                    "id": 13,
                                    "prompt": "How do you include a partial template in EJS?",
                                    "correctAnswer": "<%- include('partial_name') %>",
                                    "correctIndex": 2,
                                    "answers": [
                                        "<% partial('partial_name') %>",
                                        "<%= render('partial_name') %>",
                                        "<%- include('partial_name') %>",
                                        "<% import('partial_name') %>"
                                    ]
                                },
                                {
                                    "id": 14,
                                    "prompt": "What is the purpose of the nodemon package?",
                                    "correctAnswer": "To automatically restart the server when files change",
                                    "correctIndex": 1,
                                    "answers": [
                                        "To manage database connections",
                                        "To automatically restart the server when files change",
                                        "To compress static files",
                                        "To handle user authentication"
                                    ]
                                },
                                {
                                    "id": 15,
                                    "prompt": "How do you handle POST requests in Express.js?",
                                    "correctAnswer": "app.post('/route', callback)",
                                    "correctIndex": 3,
                                    "answers": [
                                        "app.request('/route', callback)",
                                        "app.handle('/route', callback)",
                                        "app.submit('/route', callback)",
                                        "app.post('/route', callback)"
                                    ]
                                },
                                {
                                    "id": 16,
                                    "prompt": "What is the purpose of the 'body-parser' middleware?",
                                    "correctAnswer": "To parse incoming request bodies",
                                    "correctIndex": 0,
                                    "answers": [
                                        "To parse incoming request bodies",
                                        "To compress response data",
                                        "To handle file uploads",
                                        "To validate form data"
                                    ]
                                },
                                {
                                    "id": 17,
                                    "prompt": "How do you access URL parameters in Express.js?",
                                    "correctAnswer": "req.params",
                                    "correctIndex": 2,
                                    "answers": [
                                        "req.parameters",
                                        "req.query",
                                        "req.params",
                                        "req.url"
                                    ]
                                },
                                {
                                    "id": 18,
                                    "prompt": "Which command installs a new npm package and saves it to dependencies?",
                                    "correctAnswer": "npm install package-name --save",
                                    "correctIndex": 1,
                                    "answers": [
                                        "npm add package-name",
                                        "npm install package-name --save",
                                        "npm include package-name",
                                        "npm get package-name"
                                    ]
                                },
                                {
                                    "id": 19,
                                    "prompt": "What is the correct way to start a Node.js application?",
                                    "correctAnswer": "node app.js",
                                    "correctIndex": 3,
                                    "answers": [
                                        "start app.js",
                                        "run app.js",
                                        "nodejs app.js",
                                        "node app.js"
                                    ]
                                },
                                {
                                    "id": 20,
                                    "prompt": "How do you handle errors in Express.js routes?",
                                    "correctAnswer": "Use try-catch blocks or error middleware",
                                    "correctIndex": 2,
                                    "answers": [
                                        "Use console.log()",
                                        "Ignore them",
                                        "Use try-catch blocks or error middleware",
                                        "Use alert()"
                                    ]
                                },
                                {
                                    "id": 21,
                                    "prompt": "What is the purpose of app.listen() in Express.js?",
                                    "correctAnswer": "To start the server and listen for incoming requests",
                                    "correctIndex": 2,
                                    "answers": [
                                        "To connect to the database",
                                        "To load middleware functions",
                                        "To start the server and listen for incoming requests",
                                        "To define route handlers"
                                    ]
                                },
                                {
                                    "id": 22,
                                    "prompt": "Which EJS syntax is used for executing JavaScript code without output?",
                                    "correctAnswer": "<% %>",
                                    "correctIndex": 0,
                                    "answers": [
                                        "<% %>",
                                        "<%= %>",
                                        "<%# %>",
                                        "<%- %>"
                                    ]
                                },
                                {
                                    "id": 23,
                                    "prompt": "What is the purpose of the 'views' setting in Express.js?",
                                    "correctAnswer": "To specify the directory where template files are located",
                                    "correctIndex": 1,
                                    "answers": [
                                        "To set the view engine",
                                        "To specify the directory where template files are located",
                                        "To define route views",
                                        "To configure view caching"
                                    ]
                                },
                                {
                                    "id": 24,
                                    "prompt": "How do you access query string parameters in Express.js?",
                                    "correctAnswer": "req.query",
                                    "correctIndex": 3,
                                    "answers": [
                                        "req.params",
                                        "req.strings",
                                        "req.queryParams",
                                        "req.query"
                                    ]
                                },
                                {
                                    "id": 25,
                                    "prompt": "What is the purpose of the 'express.Router()' function?",
                                    "correctAnswer": "To create modular route handlers",
                                    "correctIndex": 2,
                                    "answers": [
                                        "To handle static files",
                                        "To parse request bodies",
                                        "To create modular route handlers",
                                        "To configure middleware"
                                    ]
                                },
                                {
                                    "id": 26,
                                    "prompt": "Which method is used to redirect users in Express.js?",
                                    "correctAnswer": "res.redirect()",
                                    "correctIndex": 1,
                                    "answers": [
                                        "res.send()",
                                        "res.redirect()",
                                        "res.forward()",
                                        "res.navigate()"
                                    ]
                                },
                                {
                                    "id": 27,
                                    "prompt": "What is the purpose of the 'package-lock.json' file?",
                                    "correctAnswer": "To lock dependency versions for consistent installations",
                                    "correctIndex": 0,
                                    "answers": [
                                        "To lock dependency versions for consistent installations",
                                        "To store application configuration",
                                        "To manage database connections",
                                        "To define build scripts"
                                    ]
                                },
                                {
                                    "id": 28,
                                    "prompt": "How do you handle file uploads in Express.js?",
                                    "correctAnswer": "Using multer middleware",
                                    "correctIndex": 3,
                                    "answers": [
                                        "Using body-parser",
                                        "Using express.static",
                                        "Using path module",
                                        "Using multer middleware"
                                    ]
                                },
                                {
                                    "id": 29,
                                    "prompt": "What is the purpose of the 'morgan' middleware?",
                                    "correctAnswer": "To log HTTP requests",
                                    "correctIndex": 2,
                                    "answers": [
                                        "To handle authentication",
                                        "To compress responses",
                                        "To log HTTP requests",
                                        "To parse cookies"
                                    ]
                                },
                                {
                                    "id": 30,
                                    "prompt": "How do you set a cookie in Express.js?",
                                    "correctAnswer": "res.cookie('name', 'value')",
                                    "correctIndex": 1,
                                    "answers": [
                                        "res.setCookie('name', 'value')",
                                        "res.cookie('name', 'value')",
                                        "res.writeCookie('name', 'value')",
                                        "res.addCookie('name', 'value')"
                                    ]
                                },
                                {
                                    "id": 31,
                                    "prompt": "What is the purpose of the 'express-session' middleware?",
                                    "correctAnswer": "To handle user sessions",
                                    "correctIndex": 0,
                                    "answers": [
                                        "To handle user sessions",
                                        "To manage static files",
                                        "To parse JSON data",
                                        "To validate forms"
                                    ]
                                },
                                {
                                    "id": 32,
                                    "prompt": "How do you access POST request data in Express.js?",
                                    "correctAnswer": "req.body",
                                    "correctIndex": 3,
                                    "answers": [
                                        "req.data",
                                        "req.post",
                                        "req.form",
                                        "req.body"
                                    ]
                                },
                                {
                                    "id": 33,
                                    "prompt": "What is the purpose of the 'dotenv' package?",
                                    "correctAnswer": "To load environment variables from a .env file",
                                    "correctIndex": 2,
                                    "answers": [
                                        "To handle dot notation in JavaScript",
                                        "To manage file extensions",
                                        "To load environment variables from a .env file",
                                        "To configure domain settings"
                                    ]
                                },
                                {
                                    "id": 34,
                                    "prompt": "Which method is used to send JSON responses in Express.js?",
                                    "correctAnswer": "res.json()",
                                    "correctIndex": 1,
                                    "answers": [
                                        "res.sendJSON()",
                                        "res.json()",
                                        "res.writeJSON()",
                                        "res.responseJSON()"
                                    ]
                                },
                                {
                                    "id": 35,
                                    "prompt": "How do you handle 404 errors in Express.js?",
                                    "correctAnswer": "Use a middleware after all other routes",
                                    "correctIndex": 3,
                                    "answers": [
                                        "Use try-catch in routes",
                                        "Set error property in response",
                                        "Return status 404 in each route",
                                        "Use a middleware after all other routes"
                                    ]
                                },
                                {
                                    "id": 36,
                                    "prompt": "What is the purpose of the 'cors' middleware?",
                                    "correctAnswer": "To enable Cross-Origin Resource Sharing",
                                    "correctIndex": 0,
                                    "answers": [
                                        "To enable Cross-Origin Resource Sharing",
                                        "To handle core server functions",
                                        "To manage course content",
                                        "To coordinate server responses"
                                    ]
                                },
                                {
                                    "id": 37,
                                    "prompt": "How do you include custom CSS files in an EJS template?",
                                    "correctAnswer": "Use the link tag in the head section",
                                    "correctIndex": 2,
                                    "answers": [
                                        "Use <%= include('styles.css') %>",
                                        "Import CSS in server.js",
                                        "Use the link tag in the head section",
                                        "Use <%- css %> tags"
                                    ]
                                },
                                {
                                    "id": 38,
                                    "prompt": "What is the purpose of the 'helmet' middleware?",
                                    "correctAnswer": "To add security headers",
                                    "correctIndex": 1,
                                    "answers": [
                                        "To protect against DDoS attacks",
                                        "To add security headers",
                                        "To encrypt data",
                                        "To validate user input"
                                    ]
                                },
                                {
                                    "id": 39,
                                    "prompt": "How do you validate input data in Express.js?",
                                    "correctAnswer": "Using express-validator middleware",
                                    "correctIndex": 3,
                                    "answers": [
                                        "Using express.validate()",
                                        "Using built-in validation",
                                        "Using app.verify()",
                                        "Using express-validator middleware"
                                    ]
                                },
                                {
                                    "id": 40,
                                    "prompt": "What is the purpose of the 'compression' middleware?",
                                    "correctAnswer": "To compress response bodies",
                                    "correctIndex": 2,
                                    "answers": [
                                        "To compress database files",
                                        "To minimize JavaScript code",
                                        "To compress response bodies",
                                        "To reduce image sizes"
                                    ]
                                }
                            ]
                        }
                    ]
                },
				                {
                    "id": 2,
                    "name": "NodeJS, Express, EJS",
                    "description": "An overview of using NodeJS with Express and EJS for web development.",
                    "tasks": [
                        {
                            "id": 1,
                            "name": "HTTP Server",
                            "description": "Creating a simple HTTP server using Node.js.",
                            "genprompt": "Generate multiple-choice questions. Each question has four answers. Write them in the question object format. The content of the question is about creating a simple HTTP server using Node.js. Focus on server creation, request handling, and response management.",
                            "questions": []
						}
                    ]
                },
				                {
                    "id": 3,
                    "name": "Formbar App Boilerplate",
                    "description": "Setting up a template to quickly start new Formbar application projects.",
                    "tasks": [
                        {
                            "id": 1,
                            "name": "Base Boilerplate",
                            "description": "Creating a simple HTTP server using Node.js.",
                            "genprompt": "Generate multiple-choice questions. Each question has four answers. Write them in the question object format.",
                            "questions": [
							
    {
        "id": 1,
        "prompt": "What is the primary purpose of Express.js in this project?",
        "correctAnswer": "To create a web server and handle routes",
        "correctIndex": 1,
        "answers": [
            "To store data in a database",
            "To create a web server and handle routes",
            "To connect to WebSockets",
            "To render EJS templates"
        ]
    },
    {
        "id": 2,
        "prompt": "What does the EJS package do in this project?",
        "correctAnswer": "Renders dynamic HTML pages",
        "correctIndex": 1,
        "answers": [
            "Handles JSON requests",
            "Renders dynamic HTML pages",
            "Compiles JavaScript files",
            "Manages database migrations"
        ]
    },
    {
        "id": 3,
        "prompt": "Why do we use .env files?",
        "correctAnswer": "To keep secret configuration values",
        "correctIndex": 2,
        "answers": [
            "To store HTML templates",
            "To track Git changes",
            "To keep secret configuration values",
            "To initialize the database"
        ]
    },
    {
        "id": 4,
        "prompt": "Which command runs the database initialization script?",
        "correctAnswer": "npm run init-db",
        "correctIndex": 2,
        "answers": [
            "npm run db",
            "npm install",
            "npm run init-db",
            "sqlite3 db/init.sql"
        ]
    },
    {
        "id": 5,
        "prompt": "What does connect-sqlite3 provide?",
        "correctAnswer": "Persistent session storage",
        "correctIndex": 1,
        "answers": [
            "A user authentication system",
            "Persistent session storage",
            "File upload support",
            "EJS rendering"
        ]
    },
    {
        "id": 6,
        "prompt": "What is the role of express-session?",
        "correctAnswer": "To manage login sessions",
        "correctIndex": 1,
        "answers": [
            "To connect to SQLite",
            "To manage login sessions",
            "To serve static files",
            "To store environment variables"
        ]
    },
    {
        "id": 7,
        "prompt": "In this app, what is stored inside a session?",
        "correctAnswer": "User data like name and token",
        "correctIndex": 1,
        "answers": [
            "HTML templates",
            "User data like name and token",
            "Database schema",
            "API routes"
        ]
    },
    {
        "id": 8,
        "prompt": "What is the function of jsonwebtoken in the Formbar login?",
        "correctAnswer": "It encodes and decodes user tokens",
        "correctIndex": 1,
        "answers": [
            "It generates random passwords",
            "It encodes and decodes user tokens",
            "It connects to WebSockets",
            "It serves HTML pages"
        ]
    },
    {
        "id": 11,
        "prompt": "What command starts the server?",
        "correctAnswer": "npm start",
        "correctIndex": 1,
        "answers": [
            "npm run app",
            "npm start",
            "npm server",
            "node init-db.js"
        ]
    },
    {
        "id": 12,
        "prompt": "What file defines the SQL tables used in the app?",
        "correctAnswer": "db/init.sql",
        "correctIndex": 2,
        "answers": [
            "app.js",
            ".env",
            "db/init.sql",
            "scripts/init-db.js"
        ]
    },
    {
        "id": 13,
        "prompt": "What does scripts/init-db.js do?",
        "correctAnswer": "Reads and executes db/init.sql",
        "correctIndex": 1,
        "answers": [
            "Creates EJS templates",
            "Reads and executes db/init.sql",
            "Fetches Formbar user data",
            "Renders the login page"
        ]
    },
    {
        "id": 15,
        "prompt": "What is the purpose of socket.io-client in this project?",
        "correctAnswer": "To connect to the Formbar WebSocket",
        "correctIndex": 1,
        "answers": [
            "To send HTTP requests",
            "To connect to the Formbar WebSocket",
            "To compress static files",
            "To compile JavaScript"
        ]
    },
    {
        "id": 16,
        "prompt": "Where are the EJS view files stored?",
        "correctAnswer": "/views",
        "correctIndex": 1,
        "answers": [
            "/db",
            "/views",
            "/scripts",
            "/public"
        ]
    },
    {
        "id": 17,
        "prompt": "What should be included in .gitignore?",
        "correctAnswer": ".env and db/*.db",
        "correctIndex": 1,
        "answers": [
            "The views folder",
            ".env and db/*.db",
            "app.js",
            "package.json"
        ]
    },
    {
        "id": 18,
        "prompt": "What does require('dotenv').config() do?",
        "correctAnswer": "Loads variables from .env into process.env",
        "correctIndex": 0,
        "answers": [
            "Loads variables from .env into process.env",
            "Deletes environment variables",
            "Starts a WebSocket connection",
            "Initializes the database"
        ]
    },
    {
        "id": 19,
        "prompt": "What is the purpose of making the GitHub repo a Template Repository?",
        "correctAnswer": "To generate new projects easily",
        "correctIndex": 1,
        "answers": [
            "To allow others to edit the main repo directly",
            "To generate new projects easily",
            "To hide the repo from search results",
            "To enable branch protection"
        ]
    },
    {
        "id": 21,
        "prompt": "What does Node.js allow developers to do?",
        "correctAnswer": "Run JavaScript on the server side",
        "correctIndex": 1,
        "answers": [
            "Compile TypeScript to JavaScript",
            "Run JavaScript on the server side",
            "Design user interfaces in HTML",
            "Store static assets in the browser"
        ]
    },
    {
        "id": 22,
        "prompt": "Which command installs a package and saves it as a project dependency?",
        "correctAnswer": "npm install package-name",
        "correctIndex": 2,
        "answers": [
            "npm start package-name",
            "npm create package-name",
            "npm install package-name",
            "npm new package-name"
        ]
    },
    {
        "id": 23,
        "prompt": "What is the purpose of package.json?",
        "correctAnswer": "To define project metadata and dependencies",
        "correctIndex": 1,
        "answers": [
            "To store HTML templates",
            "To define project metadata and dependencies",
            "To contain SQL scripts",
            "To hold environment variables"
        ]
    },
    {
        "id": 24,
        "prompt": "What does the res.send() function do in Express?",
        "correctAnswer": "Sends a response back to the client",
        "correctIndex": 1,
        "answers": [
            "Starts the Express server",
            "Sends a response back to the client",
            "Closes all database connections",
            "Logs output to the console"
        ]
    },
    {
        "id": 25,
        "prompt": "What is middleware in Express?",
        "correctAnswer": "A function that runs between a request and response",
        "correctIndex": 2,
        "answers": [
            "A route handler for POST requests",
            "An environment variable handler",
            "A function that runs between a request and response",
            "A type of database connection"
        ]
    },
    {
        "id": 26,
        "prompt": "What is the default HTTP port for most web servers?",
        "correctAnswer": "80",
        "correctIndex": 0,
        "answers": [
            "80",
            "3000",
            "443",
            "22"
        ]
    },
    {
        "id": 27,
        "prompt": "What does app.use(express.static('public')) do?",
        "correctAnswer": "Serves static files like images or CSS from the public folder",
        "correctIndex": 2,
        "answers": [
            "Registers all dynamic routes",
            "Compiles templates automatically",
            "Serves static files like images or CSS from the public folder",
            "Starts the main Express app"
        ]
    },
    {
        "id": 28,
        "prompt": "Which command runs a Node.js script named app.js?",
        "correctAnswer": "node app.js",
        "correctIndex": 1,
        "answers": [
            "npm app.js",
            "node app.js",
            "npm start app.js",
            "run app.js"
        ]
    },
    {
        "id": 29,
        "prompt": "What kind of database is SQLite?",
        "correctAnswer": "A lightweight file-based relational database",
        "correctIndex": 1,
        "answers": [
            "A cloud-based NoSQL database",
            "A lightweight file-based relational database",
            "A distributed database system",
            "An in-memory key-value store"
        ]
    },
    {
        "id": 30,
        "prompt": "What SQL keyword is used to add new data into a table?",
        "correctAnswer": "INSERT",
        "correctIndex": 0,
        "answers": [
            "INSERT",
            "UPDATE",
            "SELECT",
            "DELETE"
        ]
    },
    {
        "id": 31,
        "prompt": "What is a primary key in a SQL table?",
        "correctAnswer": "A unique identifier for each row",
        "correctIndex": 1,
        "answers": [
            "A reference to another table",
            "A unique identifier for each row",
            "A field that stores all text values",
            "A type of foreign constraint"
        ]
    },
    {
        "id": 32,
        "prompt": "What does the SELECT statement do in SQL?",
        "correctAnswer": "Retrieves data from a table",
        "correctIndex": 1,
        "answers": [
            "Deletes data from a table",
            "Retrieves data from a table",
            "Creates a new table",
            "Updates table columns"
        ]
    },
    {
        "id": 33,
        "prompt": "What is the main benefit of using sessions in a web app?",
        "correctAnswer": "They allow the server to remember users between requests",
        "correctIndex": 1,
        "answers": [
            "They store files on the client computer",
            "They allow the server to remember users between requests",
            "They encrypt database queries",
            "They automatically refresh HTML pages"
        ]
    },
    {
        "id": 34,
        "prompt": "What does req.body contain in an Express POST route?",
        "correctAnswer": "Data sent by the client in the request body",
        "correctIndex": 2,
        "answers": [
            "The session data",
            "Headers from the client request",
            "Data sent by the client in the request body",
            "Static file paths"
        ]
    },
    {
        "id": 35,
        "prompt": "Which Express method defines a GET route?",
        "correctAnswer": "app.get()",
        "correctIndex": 1,
        "answers": [
            "app.route()",
            "app.get()",
            "app.send()",
            "app.listen()"
        ]
    },
    {
        "id": 36,
        "prompt": "What is the purpose of app.listen() in an Express app?",
        "correctAnswer": "Starts the web server and listens for incoming requests",
        "correctIndex": 2,
        "answers": [
            "Registers a new middleware function",
            "Loads environment variables",
            "Starts the web server and listens for incoming requests",
            "Connects to the database"
        ]
    },
    {
        "id": 37,
        "prompt": "Which npm command initializes a new Node.js project?",
        "correctAnswer": "npm init",
        "correctIndex": 0,
        "answers": [
            "npm init",
            "npm install",
            "npm start",
            "npm build"
        ]
    },
    {
        "id": 38,
        "prompt": "What is the advantage of using environment variables?",
        "correctAnswer": "They keep secrets and configuration separate from code",
        "correctIndex": 2,
        "answers": [
            "They make debugging easier",
            "They automatically generate routes",
            "They keep secrets and configuration separate from code",
            "They compress static files"
        ]
    },
    {
        "id": 39,
        "prompt": "What is the purpose of module.exports in Node.js?",
        "correctAnswer": "To make functions or variables available to other files",
        "correctIndex": 2,
        "answers": [
            "To import packages",
            "To load environment variables",
            "To make functions or variables available to other files",
            "To render templates"
        ]
    },
    {
        "id": 40,
        "prompt": "What does the npm start command usually do?",
        "correctAnswer": "Runs the script defined as 'start' in package.json",
        "correctIndex": 1,
        "answers": [
            "Runs all scripts in the project",
            "Runs the script defined as 'start' in package.json",
            "Installs all dependencies",
            "Initializes a new environment file"
        ]
    }
]

						}
                    ]
                }
            ]
        }
    ]
}